STORE: ACTIONS AND STATE

App.vue
  actions: setAgentHandle, skipBackoff,
  ec actions: displayErrorMessage, setChannelPolling,
  state: 'agentHandle',
      'needsHandle',
      'conductorDisconnected',
      'firstConnect',
      'reconnectingIn',
      'isHoloSignedIn',
      'isChaperoneDisconnected'
  ec state: 'error'

ElementalChat
  ec actions
      'listChannels',
      'updateHandle',
      'getStats',
      'resetStats'
  actions
    'holoLogout'
  ec state
    'channels',
    'channel',
    'stats',
    'showStats',
    'statsLoading'
  state
    conductorDisconnected
    appInterface

Channels  
  ec actions
      "setChannel",
      "createChannel",
      "listMessages",
  ec state
    "channel"

Message
  ec actions
    diplayErrorMessage
  ec state  
    "channels"

Messages
  ec actions
    addMessageToChannel
  state 
    conductorDisconnected
  ec state
    channel

CONDUCTOR CALLS

app info, plus

zome calls
'chat', 'agent_stats'
'chat', 'create_channel',
'chat', 'list_channels'
'chat', 'create_message',
'chat', 'signal_chatters',
'chat', 'list_messages',
'chat', 'refresh_chatter'

signal:
  signalName: Message

TODO
variable names: message.message, and channel.channel. should be messageEl.message, channelEl.entry, argument names are messageElement, and message. TBD
addMessageToChannel is overloaded in confusing way. Action and mutation take different typed args for `message`

Questions
  Is there a better way to handle the initialization? Calling initializeApp from initializeAgent feels weird to me.
  Should channel be stored in addition to channels? Alternative is just to store "currentChannelId", and create a getter to fetch the actual channel
  Investigate addSignalChannel. Can we remove it?
